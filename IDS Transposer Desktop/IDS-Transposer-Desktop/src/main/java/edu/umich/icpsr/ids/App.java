/*
Copyright 2021 George Alter

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package edu.umich.icpsr.ids;

import edu.umich.icpsr.actions.ids.IDSTransposerController;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SwingWorker;
import org.apache.log4j.BasicConfigurator;

public class App extends javax.swing.JFrame {
	
	private List<File> files;
	private IDSTransposerController controller;

	/**
	 * Creates new form App
	 */
	public App(boolean guiOn) {
                if (guiOn == true){
                    initComponents();
                }
		files = new ArrayList();
		controller = new IDSTransposerController();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        delimiterButtons = new javax.swing.ButtonGroup();
        fileBrowser = new javax.swing.JFileChooser();
        title = new javax.swing.JLabel();
        commaSeparatedButton = new javax.swing.JRadioButton();
        tabSeparatedButton = new javax.swing.JRadioButton();
        targetFolderLabel = new javax.swing.JLabel();
        targetFolderField = new javax.swing.JTextField();
        delimiterButtonsLabel = new javax.swing.JLabel();
        targetFolderBrowseButton = new javax.swing.JButton();
        goButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        entityFileLabel = new javax.swing.JLabel();
        entityFileField = new javax.swing.JTextField();
        entityFileBrowseButton = new javax.swing.JButton();
        relationshipFileLabel = new javax.swing.JLabel();
        relationshipFileField = new javax.swing.JTextField();
        relationshipFileBrowseButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        progressBar = new javax.swing.JProgressBar();
        filesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList<>();
        addFileButton = new javax.swing.JButton();
        removeFileButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        statusText = new javax.swing.JTextArea();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler13 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler14 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler15 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler16 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler17 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler18 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler19 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler20 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler21 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler22 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler23 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler24 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler25 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler26 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler27 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler28 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler29 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler30 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler31 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler34 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler32 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IDS Transposer");
        setPreferredSize(new java.awt.Dimension(600, 720));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        title.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("IDS Transposer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 10);
        getContentPane().add(title, gridBagConstraints);

        delimiterButtons.add(commaSeparatedButton);
        commaSeparatedButton.setSelected(true);
        commaSeparatedButton.setText("Comma-Separated");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(commaSeparatedButton, gridBagConstraints);

        delimiterButtons.add(tabSeparatedButton);
        tabSeparatedButton.setText("Tab-Separated");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(tabSeparatedButton, gridBagConstraints);

        targetFolderLabel.setLabelFor(targetFolderField);
        targetFolderLabel.setText("Target folder:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(targetFolderLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(targetFolderField, gridBagConstraints);

        delimiterButtonsLabel.setText("Delimiter type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(delimiterButtonsLabel, gridBagConstraints);

        targetFolderBrowseButton.setText("Browse");
        targetFolderBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseTargetFolder(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(targetFolderBrowseButton, gridBagConstraints);

        goButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        goButton.setText("GO");
        goButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitForm(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        getContentPane().add(goButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
        getContentPane().add(jSeparator1, gridBagConstraints);

        entityFileLabel.setLabelFor(entityFileField);
        entityFileLabel.setText("Entity:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(entityFileLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(entityFileField, gridBagConstraints);

        entityFileBrowseButton.setText("Browse");
        entityFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseEntityFile(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        getContentPane().add(entityFileBrowseButton, gridBagConstraints);

        relationshipFileLabel.setLabelFor(relationshipFileField);
        relationshipFileLabel.setText("Relationship:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(relationshipFileLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(relationshipFileField, gridBagConstraints);

        relationshipFileBrowseButton.setText("Browse");
        relationshipFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseRelationshipFile(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        getContentPane().add(relationshipFileBrowseButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
        getContentPane().add(jSeparator2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(progressBar, gridBagConstraints);

        filesLabel.setLabelFor(fileList);
        filesLabel.setText("Files:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        getContentPane().add(filesLabel, gridBagConstraints);

        fileList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                enableRemoveButton(evt);
            }
        });
        jScrollPane1.setViewportView(fileList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        addFileButton.setText("Add");
        addFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFile(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        getContentPane().add(addFileButton, gridBagConstraints);

        removeFileButton.setText("Remove");
        removeFileButton.setEnabled(false);
        removeFileButton.setMargin(new java.awt.Insets(2, 5, 2, 5));
        removeFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFile(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        getContentPane().add(removeFileButton, gridBagConstraints);

        jScrollPane3.setBorder(null);

        statusText.setEditable(false);
        statusText.setColumns(20);
        statusText.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        statusText.setLineWrap(true);
        statusText.setRows(4);
        statusText.setWrapStyleWord(true);
        statusText.setOpaque(false);
        jScrollPane3.setViewportView(statusText);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.14;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jScrollPane3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.14;
        getContentPane().add(filler12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(filler13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        getContentPane().add(filler14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(filler15, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        getContentPane().add(filler16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        getContentPane().add(filler17, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        getContentPane().add(filler18, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        getContentPane().add(filler19, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        getContentPane().add(filler20, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        getContentPane().add(filler21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        getContentPane().add(filler22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        getContentPane().add(filler23, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        getContentPane().add(filler24, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        getContentPane().add(filler25, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        getContentPane().add(filler26, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        getContentPane().add(filler27, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        getContentPane().add(filler28, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        getContentPane().add(filler29, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        getContentPane().add(filler30, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        getContentPane().add(filler31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(filler34, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 21;
        getContentPane().add(filler32, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private class Transposer extends SwingWorker<String, String> {
		@Override
		protected String doInBackground() throws Exception {
			progressBar.setIndeterminate(true);
			return controller.upload(targetFolderField.getText(), commaSeparatedButton.isSelected(), entityFileField.getText(), relationshipFileField.getText(), files);
		}
		
		@Override
		protected void done() {
			if (controller.getMessage().startsWith("Success")) {
				statusText.setForeground(new java.awt.Color(0, 153, 0));
			} else {
				statusText.setForeground(new java.awt.Color(204, 0, 0));
			}
			statusText.setText(controller.getMessage());
			progressBar.setIndeterminate(false);
		}
	}
	
    private void submitForm(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitForm
		Transposer transposer = new Transposer();
		transposer.execute();
    }//GEN-LAST:event_submitForm

    private void browseTargetFolder(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseTargetFolder
		fileBrowser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
		fileBrowser.setMultiSelectionEnabled(false);
		int result = fileBrowser.showOpenDialog(this);
		if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
			targetFolderField.setText(fileBrowser.getSelectedFile().getPath());
		}
    }//GEN-LAST:event_browseTargetFolder

    private void browseEntityFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseEntityFile
		fileBrowser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
		fileBrowser.setMultiSelectionEnabled(false);
		int result = fileBrowser.showOpenDialog(this);
		if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
			entityFileField.setText(fileBrowser.getSelectedFile().getPath());
		}
    }//GEN-LAST:event_browseEntityFile

    private void browseRelationshipFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseRelationshipFile
		fileBrowser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
		fileBrowser.setMultiSelectionEnabled(false);
		int result = fileBrowser.showOpenDialog(this);
		if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
			relationshipFileField.setText(fileBrowser.getSelectedFile().getPath());
		}
    }//GEN-LAST:event_browseRelationshipFile

    private void addFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFile
		fileBrowser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
		fileBrowser.setMultiSelectionEnabled(true);
		int result = fileBrowser.showOpenDialog(this);
		if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
			for (File file : fileBrowser.getSelectedFiles()) {
				files.add(file);
			}
			fileList.setModel(new javax.swing.AbstractListModel<String>() {
				public int getSize() { 
					return files.size();
				}
				public String getElementAt(int i) { 
					return files.get(i).getPath();
				}
			});
		}
    }//GEN-LAST:event_addFile

    private void enableRemoveButton(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_enableRemoveButton
		removeFileButton.setEnabled(!fileList.isSelectionEmpty());
    }//GEN-LAST:event_enableRemoveButton

    private void removeFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFile
		for (int i = fileList.getSelectedIndices().length - 1; i >=0; i--) {
			int index = fileList.getSelectedIndices()[i];
			File toRemove = files.get(index);
			files.remove(toRemove);
		}
		fileList.setModel(new javax.swing.AbstractListModel<String>() {
			public int getSize() { 
				return files.size();
			}
			public String getElementAt(int i) { 
				return files.get(i).getPath();
			}
		});
    }//GEN-LAST:event_removeFile

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        float scaleMultiplier = Math.min(evt.getComponent().getSize().width,evt.getComponent().getSize().height) / 424f;
        //System.out.println("New size = " + evt.getComponent().getSize() + " " + scaleMultiplier);
        
        //set min and max size for fonts
        int font18 = (int)(Math.max(Math.min(18*scaleMultiplier,36),18));
        int font14 = (int)(Math.max(Math.min(14*scaleMultiplier,28),14));
        int font11 = (int)(Math.max(Math.min(11*scaleMultiplier,22),11));
        
        title.setFont(new java.awt.Font("Tahoma", 0, font18)); 
        commaSeparatedButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        tabSeparatedButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        targetFolderLabel.setFont(new java.awt.Font("Tahoma", 0, font11));
        delimiterButtonsLabel.setFont(new java.awt.Font("Tahoma", 0, font11));
        targetFolderBrowseButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        goButton.setFont(new java.awt.Font("Tahoma", 0, font14)); 
        targetFolderField.setFont(new java.awt.Font("Tahoma", 0, font11));
        entityFileLabel.setFont(new java.awt.Font("Tahoma", 0, font11));
        entityFileBrowseButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        entityFileField.setFont(new java.awt.Font("Tahoma", 0, font11));
        relationshipFileLabel.setFont(new java.awt.Font("Tahoma", 0, font11));
        relationshipFileBrowseButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        relationshipFileField.setFont(new java.awt.Font("Tahoma", 0, font11));
        filesLabel.setFont(new java.awt.Font("Tahoma", 0, font11));
        fileList.setFont(new java.awt.Font("Tahoma", 0, font11));
        addFileButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        removeFileButton.setFont(new java.awt.Font("Tahoma", 0, font11));
        statusText.setFont(new java.awt.Font("Tahoma", 0, font11)); 
    }//GEN-LAST:event_formComponentResized
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		boolean useGUI = true;
		String inputFile = "";
		
		if (args.length > 0){
			for (int i = 0; i < args.length; i++){
				if (args[i].contains("--help")) {
					System.out.println("");
					System.out.println("To use in command line:");
					System.out.println("Type --cmd to cancel GUI launch");
					System.out.println("Specify .txt input file by typing --input=\"(file path)\"");
					System.out.println("");
					System.out.println("Input file format:");
					System.out.println("");
					System.out.println("targetFolder=(file path)");
					System.out.println("delimiterType=(c for comma-separated, t for tab-separated)");
					System.out.println("entityFile=(file path)");
					System.out.println("relationshipFile=(file path)");
					System.out.println("dataFile=(file path) - repeat this line for additional data files");
					System.out.println("");
					return;
				} else if (args[i].contains("--cmd")){
					System.out.println("Specified preference to run in command line (no GUI)");
					useGUI = false;
				}
				if (args[i].contains("--input=")) {
					inputFile = args[i].replace("--input=", "").replace("\"","").replace("\'", "");
				}
			}
		} else {
                    System.out.println("No input arguments specified, launching with defaults.");
                    System.out.println("\t(Launch again with --help argument for configuration options.)");
                }

		
		if (useGUI) {
			System.out.println("Launching IDS transposer with GUI");
			/* Set the Nimbus look and feel */
			//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
			/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
			 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
			 */
			try {
				for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
					if ("Windows".equals(info.getName())) {
						javax.swing.UIManager.setLookAndFeel(info.getClassName());
						break;
					}
				}
			} catch (ClassNotFoundException ex) {
				java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
			} catch (InstantiationException ex) {
				java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
			} catch (IllegalAccessException ex) {
				java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
			} catch (javax.swing.UnsupportedLookAndFeelException ex) {
				java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
			}
			//</editor-fold>
			//</editor-fold>

			BasicConfigurator.configure();

			/* Create and display the form */
			java.awt.EventQueue.invokeLater(new Runnable() {
				public void run() {
					new App(true).setVisible(true);
				}
			});
		} else {
			if (inputFile.isEmpty()) {
				System.out.println("Error: Please specify input file. Type --help for more information.");
			} else {
				try {
					System.out.println("Running IDS transposer on input file " + inputFile);
					System.out.println("...");
                                        BasicConfigurator.configure();
					App consoleApp = new App(false);
					consoleApp.controller.runInCmd(inputFile);
					System.out.println(consoleApp.controller.getMessage());
				} catch (Exception e) {
					System.out.println(e.getMessage());
					System.out.println("Type --help for more information.");
				}
			}
		}
            
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFileButton;
    private javax.swing.JRadioButton commaSeparatedButton;
    private javax.swing.ButtonGroup delimiterButtons;
    private javax.swing.JLabel delimiterButtonsLabel;
    private javax.swing.JButton entityFileBrowseButton;
    private javax.swing.JTextField entityFileField;
    private javax.swing.JLabel entityFileLabel;
    private javax.swing.JFileChooser fileBrowser;
    private javax.swing.JList<String> fileList;
    private javax.swing.JLabel filesLabel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler11;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler13;
    private javax.swing.Box.Filler filler14;
    private javax.swing.Box.Filler filler15;
    private javax.swing.Box.Filler filler16;
    private javax.swing.Box.Filler filler17;
    private javax.swing.Box.Filler filler18;
    private javax.swing.Box.Filler filler19;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler20;
    private javax.swing.Box.Filler filler21;
    private javax.swing.Box.Filler filler22;
    private javax.swing.Box.Filler filler23;
    private javax.swing.Box.Filler filler24;
    private javax.swing.Box.Filler filler25;
    private javax.swing.Box.Filler filler26;
    private javax.swing.Box.Filler filler27;
    private javax.swing.Box.Filler filler28;
    private javax.swing.Box.Filler filler29;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler30;
    private javax.swing.Box.Filler filler31;
    private javax.swing.Box.Filler filler32;
    private javax.swing.Box.Filler filler34;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JButton goButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton relationshipFileBrowseButton;
    private javax.swing.JTextField relationshipFileField;
    private javax.swing.JLabel relationshipFileLabel;
    private javax.swing.JButton removeFileButton;
    private javax.swing.JTextArea statusText;
    private javax.swing.JRadioButton tabSeparatedButton;
    private javax.swing.JButton targetFolderBrowseButton;
    private javax.swing.JTextField targetFolderField;
    private javax.swing.JLabel targetFolderLabel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
